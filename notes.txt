Grapheme clusters
-----------------
A cursor should be moved left or right by a grapheme cluster, not by a byte or a
code point. There is an official grapheme cluster boundary algorithm. But,
according to the Unicode standard, "grapheme clusters can only provide an
approximation..." and cursor movement needs to be "based on information
supplied by the lower-level text rendering engine and font". Allegro's ttf
addon can apparently only handle combining glyphs which are drawn on top of
previous glyphs. (Nor does it appear to support bidirectionality.) Therefore,
display metrics are used to determine cursor movement.
================================================================================
Syntax highlighting in allegro
------------------------------
ALLEGRO_USTR_INFO ui;
ALLEGRO_USTR us = al_ref_buffer(&ui, pointer to token, size in bytes);
al_draw_ustr(font, colour, x, y, flags=0, us);
int pixelWidth = al_get_ustr_width(font, us);

Allegro on Ubuntu
-----------------
sudo add-apt-repository ppa:allegro/5.2
sudo apt update
sudo apt install liballegro5-dev

gcc -std=c11 -Wall -o demo1 demo2.c -lallegro -lallegro_font -lallegro_ttf

Allegro om Windows MSYS2
------------------------
pacman -Ss allegro
pacman -S mingw-w64-x86_64-allegro
setbuf(stdout, 0);

Allegro on Mac
--------------
brew install allegro
POSSIBLY brew unlink allegro; brew install --HEAD allegro
NEED -lallegro_main when compiling
================================================================================
Test case: UnicodeData.txt has 32840 lines, 1.8M bytes.
For unicode graphemes, see
https://docs.rs/unicode-segmentation/0.1.3/src/unicode_segmentation/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-0.1.3/src/grapheme.rs.html
And see ICU
