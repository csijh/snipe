Edit sequence
-------------
Insert or delete becomes replacement (text -> history).
There is then a repair range (b,e). Where is current position?
Lines can be repaired (remove and insert).
Tags can be repaired (extending the range a bit).
Brackets can be repaired from the tags.

Notes on model classes
----------------------
* No longer have dependence on filer or support classes
* Have edit object which all modules respond to.

document ->
cursors -> wraps -> indents -> brackets -> tokens -> lines -> text -> history
-> edit, unicode, arrays

From document point of view, each module is 'independent'. Give action to
cursors. Ask an active module for next edit, offer to all modules, repeat until
there are no more.

text
-----
maintains physical invariants
    (no invalid utf8, no controls?, no trailing spaces or lines, final nl)
    FF can be displayed as U+240C
    VT can be displayed as U+240B etc.
    an auto-save at any moment preserves invariants in file
    cursor(s) can be beyond right or bottom edge
insert(at,s) adjusts the insertion text
    remove invalid bytes (and controls) and potential trails
    add newline to preserve final newline
    the adjustment could be pre-insert, returning new string
delete(at,n) adjusts the delete range (both ends?) and fills in delete text
    abc [d]\n  -->  abc[ d]\n     left end
    abc[d\n]$  -->  abc[d]\n$     right end
    abc\n[def]\n$  -->  abc\n[def\n]$
    right-cursor adjust could be pre-delete, with delete returning text.
move/drag/point/cycle move the gap to the new cursor position
    so long scroll then edit is quick, gap is roughly on screen
maybe return op, so must call first, and can adjust

timings:
  loading small program 1 milli
  reading in UnicodeData.txt (2M) 2 millis (maybe cached?)
  strlen 1 milli
  uvalid 15 millis

Actions
-------
loop: cursors for actions (include all consequences)
offer all actions to text, history, lines, tags, brackets, indents, cursors(!)
ask text for fixes and offer to everyone
ask indents for fixes and offer to everyone
close sequence
if undo, offer to everyone (with undo flag for history?)

How do fixes work, given they are not at a cursor?
Insert: IF at cursor, insert before.
Delete: IF cursor in range, must be at RH end
