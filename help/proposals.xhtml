<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-GB" xml:lang="en-GB">
<head>
<meta charset="UTF-8"/>
<style>
body { font-size: 120%; }
pre, .indent { margin-left: 40px; }
img { display: block; margin: 0 auto; }
mark {
    font-family: cursive;
    font-size: 95%;
    color: #080;
    background-color: white;
}
</style>
<title><mark>Snipe</mark> Proposed Features</title>
</head>
<body>

<h1>Proposed Features</h1>

<h2>Character encoding</h2>

<p>International text will be supported, but only via UTF-8. It has become the
only sensible encoding, being
plain-text compatible, supporting all human languages, and allowing documents
with mixed languages. There is no reliable way to detect what encoding is used
in a file, making it <em>impossible</em> to support other encodings in a fully
automatic way. In any case, supporting other encodings would delay the desirable
adoption of UTF-8 everywhere. So files must be converted to UTF-8 where
necessary before being edited by <mark>Snipe</mark>.</p>

<h2>New file</h2>

<p>When a new file is created, its filename is requested straight away, instead
of creating an anonymous buffer. This is partly to be compatible with the no
buffer convention. But it is also because otherwise the editor doesn't know the
file extension and so can't do syntax highlighting of the text etc.</p>

<h2>Settings</h2>

<p>A separate settings file, perhaps <code>.snipe</code> is supported in any
directory. A search is made in ancestor directories, so that a single settings
file can apply to a multi-directory project. A check is made that the file is
within the user's home area, to guard against security threats.</p>

<h2>Double clicking</h2>

<p>Conventional double clicks are time-dependent. That means they are unreliable
when a slow computer or slow network connection interferes with the timings of
the clicks. They are also inaccessible to people who have difficulty in
clicking fast enough. So in Snipe a double click means exactly the same as two
single clicks.</p>

<p>The common effect of double or triple clicking to select a word or line can
still be achieved. A click at the same place as the existing cursor causes
a word to be selected. A click within an existing selection causes it to be
extended to the whole line. Within a directory listing, a click on a file name
which is already selected causes the file to be opened.</p>

<h2>Auto Semicolons</h2>

<p>Semicolons are inserted or corrected automatically on every edit, in a
similar fashion to indenting. This is more language-dependent than indenting,
and requires some support from language scanning.</p>

<h2>Multiple cursors</h2>

<p>Multiple cursors are too cool to leave out of <mark>Snipe</mark>. They are
coming soon.</p>

<h2>Compile and Run</h2>

<p>On pressing <code>CTRL+S</code> for example, the file is saved, and a
pre-defined command or command sequence issued to compile and/or run the
program. This should be within an existing terminal window that the programmer
is already using, with a preferred environment, and which <mark>Snipe</mark> was
started up from.</p>

<h2>Scrolling</h2>

<p>Scrolling by grabbing a bar with the mouse, and some kind of equivalent
using the keyboard, will be implemented. This will probably use a
(semi-)transparent overlayed bar rather
than permanently stealing space from the text, and much larger than usual to
make an easy target for the mouse. Line numbers should also be visible as an
overlay.</p>

<h2>Long lines</h2>

<p>Most editors have an optional line length beyond which e.g. comments are
wrapped. But the window width is an unavoidable line length, and there seems
little point in having two. So, in Snipe, the window width <em>is</em> the
line length for wrapping.</p>

<p>What happens when a line of text is longer than the window width? This should
be rare, but is occasionally more-or-less unavoidable. Editors have three
approaches. One approach is to scroll the whole window left or right. While
this seems logical, that scrolling is distracting, especially when it caused by
just one ling line. A second approach is to display a long line on two rows on
screen. This is ugly because the split point is rather arbitrary. It would be
better to split the line manually at an aesthetically better place.</p>

<p>A third approach, accepted by Snipe as a lesser evil, is to scroll just the
line itself left or right, when the cursor goes past the edge of the window
(with continuation indicators at the left or right end). This has the added
advantage that it works well with non-mono-spaced fonts.</p>

<h2>Line numbers</h2>

<p>To go straight to a specific line number, the CTRL key is held down while the
digits are typed. A line number overlay, and perhaps scrolling overlay, is
displayed during the operation.</p>

</body>
</html>
